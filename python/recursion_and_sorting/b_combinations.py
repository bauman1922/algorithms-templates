"""
На клавиатуре старых мобильных телефонов каждой цифре соответствовало 
несколько букв. Примерно так:

2:'abc',
3:'def',
4:'ghi',
5:'jkl',
6:'mno',
7:'pqrs',
8:'tuv',
9:'wxyz'

Вам известно в каком порядке были нажаты кнопки телефона, без учета повторов.
Напечатайте все комбинации букв, которые можно набрать такой последовательностью нажатий.
Формат ввода
На вход подается строка, состоящая из цифр 2-9 включительно. Длина строки не превосходит 10 символов.

Формат вывода
Выведите все возможные комбинации букв через пробел.

Пример 1
Ввод	Вывод
23
ad ae af bd be bf cd ce cf
Пример 2
Ввод	Вывод
92
wa wb wc xa xb xc ya yb yc za zb zc
"""


def combinations(digits):
    # создаётся словарь из возможных букв на клавише
    letters = {'2': 'abc',
               '3': 'def',
               '4': 'ghi',
               '5': 'jkl',
               '6': 'mno',
               '7': 'pqrs',
               '8': 'tuv',
               '9': 'wxyz'}

    # базовый случай рекурсии
    if digits == '':
        return ['']
    # пусть будет комбинация клавиш "23"
    result = []
    # берем последнюю цифру из строки "3", и сохраняем в
    # переменную комбинацию букв на клавише
    word = letters[digits[-1]]  # "def"
    # рекурсивный вызов из строки исключая последнюю цифру, вызов "2"
    for combination in combinations(digits[:-1]):
        # проходимся по каждой букве из набора букв word -'d', 'e', 'f'
        for letter in word:
            result.append(combination + letter)

    return result


print(' '.join(combinations(input())))
